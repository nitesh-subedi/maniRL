2024-07-24 14:46:31,217 INFO    MainThread:608200 [wandb_setup.py:_flush():76] Current SDK version is 0.17.5
2024-07-24 14:46:31,217 INFO    MainThread:608200 [wandb_setup.py:_flush():76] Configure stats pid to 608200
2024-07-24 14:46:31,217 INFO    MainThread:608200 [wandb_setup.py:_flush():76] Loading settings from /home/nitesh/.config/wandb/settings
2024-07-24 14:46:31,217 INFO    MainThread:608200 [wandb_setup.py:_flush():76] Loading settings from /home/nitesh/.local/share/ov/pkg/isaac-sim-4.0.0/maniRL/wandb/settings
2024-07-24 14:46:31,217 INFO    MainThread:608200 [wandb_setup.py:_flush():76] Loading settings from environment variables: {}
2024-07-24 14:46:31,217 INFO    MainThread:608200 [wandb_setup.py:_flush():76] Applying setup settings: {'_disable_service': False}
2024-07-24 14:46:31,217 INFO    MainThread:608200 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'train.py', 'program_abspath': '/home/nitesh/.local/share/ov/pkg/isaac-sim-4.0.0/maniRL/train.py', 'program': '/home/nitesh/.local/share/ov/pkg/isaac-sim-4.0.0/maniRL/train.py'}
2024-07-24 14:46:31,217 INFO    MainThread:608200 [wandb_setup.py:_flush():76] Applying login settings: {}
2024-07-24 14:46:31,217 INFO    MainThread:608200 [wandb_init.py:_log_setup():529] Logging user logs to /home/nitesh/.local/share/ov/pkg/isaac-sim-4.0.0/maniRL/wandb/run-20240724_144631-sb3-sac/logs/debug.log
2024-07-24 14:46:31,217 INFO    MainThread:608200 [wandb_init.py:_log_setup():530] Logging internal logs to /home/nitesh/.local/share/ov/pkg/isaac-sim-4.0.0/maniRL/wandb/run-20240724_144631-sb3-sac/logs/debug-internal.log
2024-07-24 14:46:31,217 INFO    MainThread:608200 [wandb_init.py:init():569] calling init triggers
2024-07-24 14:46:31,217 INFO    MainThread:608200 [wandb_init.py:init():576] wandb.init called with sweep_config: {}
config: {}
2024-07-24 14:46:31,217 INFO    MainThread:608200 [wandb_init.py:init():619] starting backend
2024-07-24 14:46:31,217 INFO    MainThread:608200 [wandb_init.py:init():623] setting up manager
2024-07-24 14:46:31,219 INFO    MainThread:608200 [backend.py:_multiprocessing_setup():105] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
2024-07-24 14:46:31,220 INFO    MainThread:608200 [wandb_init.py:init():631] backend started and connected
2024-07-24 14:46:31,222 INFO    MainThread:608200 [wandb_init.py:init():720] updated telemetry
2024-07-24 14:46:31,226 INFO    MainThread:608200 [wandb_init.py:init():753] communicating run to backend with 90.0 second timeout
2024-07-24 14:46:31,516 INFO    MainThread:608200 [wandb_run.py:_on_init():2435] communicating current version
2024-07-24 14:46:31,610 INFO    MainThread:608200 [wandb_run.py:_on_init():2444] got version response 
2024-07-24 14:46:31,611 INFO    MainThread:608200 [wandb_init.py:init():804] starting run threads in backend
2024-07-24 14:46:31,761 INFO    MainThread:608200 [wandb_run.py:_console_start():2413] atexit reg
2024-07-24 14:46:31,761 INFO    MainThread:608200 [wandb_run.py:_redirect():2255] redirect: wrap_raw
2024-07-24 14:46:31,761 INFO    MainThread:608200 [wandb_run.py:_redirect():2320] Wrapping output streams.
2024-07-24 14:46:31,761 INFO    MainThread:608200 [wandb_run.py:_redirect():2345] Redirects installed.
2024-07-24 14:46:31,762 INFO    MainThread:608200 [wandb_init.py:init():847] run started, returning control to user process
2024-07-24 14:46:49,065 INFO    MainThread:608200 [wandb_run.py:_tensorboard_callback():1544] tensorboard callback: ./results/tensorboard/SAC_1, True
2024-07-24 14:46:49,093 INFO    MainThread:608200 [wandb_watch.py:watch():51] Watching
2024-07-24 14:46:49,094 INFO    MainThread:608200 [wandb_run.py:_config_callback():1382] config_cb None None {'algo': 'SAC', 'policy_class': "<class 'stable_baselines3.sac.policies.CnnPolicy'>", 'device': 'cuda:0', 'verbose': 0, 'policy_kwargs': "{'use_sde': False}", 'num_timesteps': 0, '_total_timesteps': 100000, '_num_timesteps_at_start': 0, 'seed': 'None', 'action_noise': 'None', 'start_time': 1721850408333809542, 'learning_rate': 0.0003, 'tensorboard_log': './results/tensorboard/', '_last_obs': '[[[[  0   0   0 ...   0   0   0]\n   [  0   0   0 ...   0   0   0]\n   [  0   0   0 ...   0   0   0]\n   ...\n   [ 76  76  76 ...  76  76  76]\n   [ 76  76  76 ...  76  76  76]\n   [ 76  76  76 ...  76  76  76]]\n\n  [[  0   0   0 ...   0   0   0]\n   [  0   0   0 ...   0   0   0]\n   [  0   0   0 ...   0   0   0]\n   ...\n   [133 133 133 ... 134 134 134]\n   [133 133 133 ... 134 134 134]\n   [133 133 133 ... 134 134 134]]\n\n  [[  0   0   0 ...   0   0   0]\n   [  0   0   0 ...   0   0   0]\n   [  0   0   0 ...   0   0   0]\n   ...\n   [170 170 169 ... 170 169 169]\n   [170 169 169 ... 170 170 170]\n   [170 169 169 ... 170 170 170]]]]', '_last_episode_starts': '[ True]', '_last_original_obs': 'None', '_episode_num': 0, 'use_sde': 'False', 'sde_sample_freq': -1, '_current_progress_remaining': 1.0, '_stats_window_size': 100, 'ep_info_buffer': 'deque([], maxlen=100)', 'ep_success_buffer': 'deque([], maxlen=100)', '_n_updates': 0, '_custom_logger': 'False', 'env': '<stable_baselines3.common.vec_env.vec_transpose.VecTransposeImage object at 0x70207a7ec610>', '_vec_normalize_env': 'None', 'observation_space': 'Box(0, 255, (3, 256, 256), uint8)', 'action_space': 'Box(-0.1, 0.1, (5,), float32)', 'n_envs': 1, 'buffer_size': 300000, 'batch_size': 256, 'learning_starts': 100, 'tau': 0.005, 'gamma': 0.85, 'gradient_steps': 1, 'optimize_memory_usage': 'False', 'replay_buffer': '<stable_baselines3.common.buffers.ReplayBuffer object at 0x7020727e4c70>', 'replay_buffer_class': "<class 'stable_baselines3.common.buffers.ReplayBuffer'>", 'replay_buffer_kwargs': '{}', '_episode_storage': 'None', 'train_freq': "TrainFreq(frequency=1, unit=<TrainFrequencyUnit.STEP: 'step'>)", 'use_sde_at_warmup': 'False', 'target_entropy': -5.0, 'log_ent_coef': "tensor([0.], device='cuda:0', requires_grad=True)", 'ent_coef': 'auto', 'target_update_interval': 1, 'ent_coef_optimizer': 'Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach: None\n    fused: None\n    lr: 0.0003\n    maximize: False\n    weight_decay: 0\n)', 'lr_schedule': '<function get_schedule_fn.<locals>.<lambda> at 0x702073713f40>', 'policy': 'CnnPolicy(\n  (actor): Actor(\n    (features_extractor): NatureCNN(\n      (cnn): Sequential(\n        (0): Conv2d(3, 32, kernel_size=(8, 8), stride=(4, 4))\n        (1): ReLU()\n        (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2, 2))\n        (3): ReLU()\n        (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1))\n        (5): ReLU()\n        (6): Flatten(start_dim=1, end_dim=-1)\n      )\n      (linear): Sequential(\n        (0): Linear(in_features=50176, out_features=512, bias=True)\n        (1): ReLU()\n      )\n    )\n    (latent_pi): Sequential(\n      (0): Linear(in_features=512, out_features=256, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=256, out_features=256, bias=True)\n      (3): ReLU()\n    )\n    (mu): Linear(in_features=256, out_features=5, bias=True)\n    (log_std): Linear(in_features=256, out_features=5, bias=True)\n  )\n  (critic): ContinuousCritic(\n    (features_extractor): NatureCNN(\n      (cnn): Sequential(\n        (0): Conv2d(3, 32, kernel_size=(8, 8), stride=(4, 4))\n        (1): ReLU()\n        (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2, 2))\n        (3): ReLU()\n        (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1))\n        (5): ReLU()\n        (6): Flatten(start_dim=1, end_dim=-1)\n      )\n      (linear): Sequential(\n        (0): Linear(in_features=50176, out_features=512, bias=True)\n        (1): ReLU()\n      )\n    )\n    (qf0): Sequential(\n      (0): Linear(in_features=517, out_features=256, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=256, out_features=256, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=256, out_features=1, bias=True)\n    )\n    (qf1): Sequential(\n      (0): Linear(in_features=517, out_features=256, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=256, out_features=256, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=256, out_features=1, bias=True)\n    )\n  )\n  (critic_target): ContinuousCritic(\n    (features_extractor): NatureCNN(\n      (cnn): Sequential(\n        (0): Conv2d(3, 32, kernel_size=(8, 8), stride=(4, 4))\n        (1): ReLU()\n        (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2, 2))\n        (3): ReLU()\n        (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1))\n        (5): ReLU()\n        (6): Flatten(start_dim=1, end_dim=-1)\n      )\n      (linear): Sequential(\n        (0): Linear(in_features=50176, out_features=512, bias=True)\n        (1): ReLU()\n      )\n    )\n    (qf0): Sequential(\n      (0): Linear(in_features=517, out_features=256, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=256, out_features=256, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=256, out_features=1, bias=True)\n    )\n    (qf1): Sequential(\n      (0): Linear(in_features=517, out_features=256, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=256, out_features=256, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=256, out_features=1, bias=True)\n    )\n  )\n)', 'actor': 'Actor(\n  (features_extractor): NatureCNN(\n    (cnn): Sequential(\n      (0): Conv2d(3, 32, kernel_size=(8, 8), stride=(4, 4))\n      (1): ReLU()\n      (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2, 2))\n      (3): ReLU()\n      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1))\n      (5): ReLU()\n      (6): Flatten(start_dim=1, end_dim=-1)\n    )\n    (linear): Sequential(\n      (0): Linear(in_features=50176, out_features=512, bias=True)\n      (1): ReLU()\n    )\n  )\n  (latent_pi): Sequential(\n    (0): Linear(in_features=512, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n  )\n  (mu): Linear(in_features=256, out_features=5, bias=True)\n  (log_std): Linear(in_features=256, out_features=5, bias=True)\n)', 'critic': 'ContinuousCritic(\n  (features_extractor): NatureCNN(\n    (cnn): Sequential(\n      (0): Conv2d(3, 32, kernel_size=(8, 8), stride=(4, 4))\n      (1): ReLU()\n      (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2, 2))\n      (3): ReLU()\n      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1))\n      (5): ReLU()\n      (6): Flatten(start_dim=1, end_dim=-1)\n    )\n    (linear): Sequential(\n      (0): Linear(in_features=50176, out_features=512, bias=True)\n      (1): ReLU()\n    )\n  )\n  (qf0): Sequential(\n    (0): Linear(in_features=517, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=517, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n)', 'critic_target': 'ContinuousCritic(\n  (features_extractor): NatureCNN(\n    (cnn): Sequential(\n      (0): Conv2d(3, 32, kernel_size=(8, 8), stride=(4, 4))\n      (1): ReLU()\n      (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2, 2))\n      (3): ReLU()\n      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1))\n      (5): ReLU()\n      (6): Flatten(start_dim=1, end_dim=-1)\n    )\n    (linear): Sequential(\n      (0): Linear(in_features=50176, out_features=512, bias=True)\n      (1): ReLU()\n    )\n  )\n  (qf0): Sequential(\n    (0): Linear(in_features=517, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=517, out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1, bias=True)\n  )\n)', 'batch_norm_stats': '[]', 'batch_norm_stats_target': '[]', '_logger': '<stable_baselines3.common.logger.Logger object at 0x70207376cd30>'}
