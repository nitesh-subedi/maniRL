wandb_version: 1

_wandb:
  desc: null
  value:
    python_version: 3.10.14
    cli_version: 0.17.5
    framework: torch
    is_jupyter_run: false
    is_kaggle_kernel: false
    start_time: 1722317403
    t:
      1:
      - 1
      - 55
      2:
      - 1
      - 55
      3:
      - 1
      - 14
      - 22
      - 23
      - 35
      4: 3.10.14
      5: 0.17.5
      8:
      - 5
      13: linux-x86_64
algo:
  desc: null
  value: SAC
policy_class:
  desc: null
  value: <class 'stable_baselines3.sac.policies.CnnPolicy'>
device:
  desc: null
  value: cuda:0
verbose:
  desc: null
  value: 0
policy_kwargs:
  desc: null
  value: '{''use_sde'': False}'
num_timesteps:
  desc: null
  value: 0
_total_timesteps:
  desc: null
  value: 100000
_num_timesteps_at_start:
  desc: null
  value: 0
seed:
  desc: null
  value: None
action_noise:
  desc: null
  value: None
start_time:
  desc: null
  value: 1722317420372223875
learning_rate:
  desc: null
  value: 0.003
tensorboard_log:
  desc: null
  value: ./results/SAC_isaac_collision_gamma02/tensorboard/
_last_obs:
  desc: null
  value: "[[[[  0   0   0 ...   0   0   0]\n   [  0   0   0 ...   0   0   0]\n   [\
    \  0   0   0 ...   0   0   0]\n   ...\n   [ 73  73  73 ...  74  73  73]\n   [\
    \ 73  73  74 ...  74  74  74]\n   [ 73  73  74 ...  74  74  74]]\n\n  [[  0  \
    \ 0   0 ...   0   0   0]\n   [  0   0   0 ...   0   0   0]\n   [  0   0   0 ...\
    \   0   0   0]\n   ...\n   [130 130 130 ... 130 130 130]\n   [130 130 130 ...\
    \ 130 130 130]\n   [130 130 130 ... 130 130 130]]\n\n  [[  0   0   0 ...   0 \
    \  0   0]\n   [  0   0   0 ...   0   0   0]\n   [  0   0   0 ...   0   0   0]\n\
    \   ...\n   [166 166 166 ... 167 166 167]\n   [166 166 166 ... 167 167 167]\n\
    \   [166 166 166 ... 166 167 167]]]]"
_last_episode_starts:
  desc: null
  value: '[ True]'
_last_original_obs:
  desc: null
  value: None
_episode_num:
  desc: null
  value: 0
use_sde:
  desc: null
  value: 'False'
sde_sample_freq:
  desc: null
  value: -1
_current_progress_remaining:
  desc: null
  value: 1.0
_stats_window_size:
  desc: null
  value: 100
ep_info_buffer:
  desc: null
  value: deque([], maxlen=100)
ep_success_buffer:
  desc: null
  value: deque([], maxlen=100)
_n_updates:
  desc: null
  value: 0
_custom_logger:
  desc: null
  value: 'False'
env:
  desc: null
  value: <stable_baselines3.common.vec_env.vec_transpose.VecTransposeImage object
    at 0x78153691ff70>
_vec_normalize_env:
  desc: null
  value: None
observation_space:
  desc: null
  value: Box(0, 255, (3, 256, 256), uint8)
action_space:
  desc: null
  value: Box(-1.0, 1.0, (5,), float32)
n_envs:
  desc: null
  value: 1
buffer_size:
  desc: null
  value: 100000
batch_size:
  desc: null
  value: 512
learning_starts:
  desc: null
  value: 100
tau:
  desc: null
  value: 0.005
gamma:
  desc: null
  value: 0.99
gradient_steps:
  desc: null
  value: 1
optimize_memory_usage:
  desc: null
  value: 'False'
replay_buffer:
  desc: null
  value: <stable_baselines3.common.buffers.ReplayBuffer object at 0x781539fbc430>
replay_buffer_class:
  desc: null
  value: <class 'stable_baselines3.common.buffers.ReplayBuffer'>
replay_buffer_kwargs:
  desc: null
  value: '{}'
_episode_storage:
  desc: null
  value: None
train_freq:
  desc: null
  value: 'TrainFreq(frequency=1, unit=<TrainFrequencyUnit.STEP: ''step''>)'
use_sde_at_warmup:
  desc: null
  value: 'False'
target_entropy:
  desc: null
  value: -5.0
log_ent_coef:
  desc: null
  value: tensor([0.], device='cuda:0', requires_grad=True)
ent_coef:
  desc: null
  value: auto
target_update_interval:
  desc: null
  value: 1
ent_coef_optimizer:
  desc: null
  value: "Adam (\nParameter Group 0\n    amsgrad: False\n    betas: (0.9, 0.999)\n\
    \    capturable: False\n    differentiable: False\n    eps: 1e-08\n    foreach:\
    \ None\n    fused: None\n    lr: 0.003\n    maximize: False\n    weight_decay:\
    \ 0\n)"
lr_schedule:
  desc: null
  value: <function get_schedule_fn.<locals>.<lambda> at 0x7816ce52a0e0>
policy:
  desc: null
  value: "CnnPolicy(\n  (actor): Actor(\n    (features_extractor): NatureCNN(\n  \
    \    (cnn): Sequential(\n        (0): Conv2d(3, 32, kernel_size=(8, 8), stride=(4,\
    \ 4))\n        (1): ReLU()\n        (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2,\
    \ 2))\n        (3): ReLU()\n        (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1,\
    \ 1))\n        (5): ReLU()\n        (6): Flatten(start_dim=1, end_dim=-1)\n  \
    \    )\n      (linear): Sequential(\n        (0): Linear(in_features=50176, out_features=512,\
    \ bias=True)\n        (1): ReLU()\n      )\n    )\n    (latent_pi): Sequential(\n\
    \      (0): Linear(in_features=512, out_features=256, bias=True)\n      (1): ReLU()\n\
    \      (2): Linear(in_features=256, out_features=256, bias=True)\n      (3): ReLU()\n\
    \    )\n    (mu): Linear(in_features=256, out_features=5, bias=True)\n    (log_std):\
    \ Linear(in_features=256, out_features=5, bias=True)\n  )\n  (critic): ContinuousCritic(\n\
    \    (features_extractor): NatureCNN(\n      (cnn): Sequential(\n        (0):\
    \ Conv2d(3, 32, kernel_size=(8, 8), stride=(4, 4))\n        (1): ReLU()\n    \
    \    (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2, 2))\n        (3): ReLU()\n\
    \        (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1))\n        (5):\
    \ ReLU()\n        (6): Flatten(start_dim=1, end_dim=-1)\n      )\n      (linear):\
    \ Sequential(\n        (0): Linear(in_features=50176, out_features=512, bias=True)\n\
    \        (1): ReLU()\n      )\n    )\n    (qf0): Sequential(\n      (0): Linear(in_features=517,\
    \ out_features=256, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=256,\
    \ out_features=256, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=256,\
    \ out_features=1, bias=True)\n    )\n    (qf1): Sequential(\n      (0): Linear(in_features=517,\
    \ out_features=256, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=256,\
    \ out_features=256, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=256,\
    \ out_features=1, bias=True)\n    )\n  )\n  (critic_target): ContinuousCritic(\n\
    \    (features_extractor): NatureCNN(\n      (cnn): Sequential(\n        (0):\
    \ Conv2d(3, 32, kernel_size=(8, 8), stride=(4, 4))\n        (1): ReLU()\n    \
    \    (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2, 2))\n        (3): ReLU()\n\
    \        (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1))\n        (5):\
    \ ReLU()\n        (6): Flatten(start_dim=1, end_dim=-1)\n      )\n      (linear):\
    \ Sequential(\n        (0): Linear(in_features=50176, out_features=512, bias=True)\n\
    \        (1): ReLU()\n      )\n    )\n    (qf0): Sequential(\n      (0): Linear(in_features=517,\
    \ out_features=256, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=256,\
    \ out_features=256, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=256,\
    \ out_features=1, bias=True)\n    )\n    (qf1): Sequential(\n      (0): Linear(in_features=517,\
    \ out_features=256, bias=True)\n      (1): ReLU()\n      (2): Linear(in_features=256,\
    \ out_features=256, bias=True)\n      (3): ReLU()\n      (4): Linear(in_features=256,\
    \ out_features=1, bias=True)\n    )\n  )\n)"
actor:
  desc: null
  value: "Actor(\n  (features_extractor): NatureCNN(\n    (cnn): Sequential(\n   \
    \   (0): Conv2d(3, 32, kernel_size=(8, 8), stride=(4, 4))\n      (1): ReLU()\n\
    \      (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2, 2))\n      (3): ReLU()\n\
    \      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1))\n      (5): ReLU()\n\
    \      (6): Flatten(start_dim=1, end_dim=-1)\n    )\n    (linear): Sequential(\n\
    \      (0): Linear(in_features=50176, out_features=512, bias=True)\n      (1):\
    \ ReLU()\n    )\n  )\n  (latent_pi): Sequential(\n    (0): Linear(in_features=512,\
    \ out_features=256, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256,\
    \ out_features=256, bias=True)\n    (3): ReLU()\n  )\n  (mu): Linear(in_features=256,\
    \ out_features=5, bias=True)\n  (log_std): Linear(in_features=256, out_features=5,\
    \ bias=True)\n)"
critic:
  desc: null
  value: "ContinuousCritic(\n  (features_extractor): NatureCNN(\n    (cnn): Sequential(\n\
    \      (0): Conv2d(3, 32, kernel_size=(8, 8), stride=(4, 4))\n      (1): ReLU()\n\
    \      (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2, 2))\n      (3): ReLU()\n\
    \      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1))\n      (5): ReLU()\n\
    \      (6): Flatten(start_dim=1, end_dim=-1)\n    )\n    (linear): Sequential(\n\
    \      (0): Linear(in_features=50176, out_features=512, bias=True)\n      (1):\
    \ ReLU()\n    )\n  )\n  (qf0): Sequential(\n    (0): Linear(in_features=517, out_features=256,\
    \ bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256,\
    \ bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1,\
    \ bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=517, out_features=256,\
    \ bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256,\
    \ bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1,\
    \ bias=True)\n  )\n)"
critic_target:
  desc: null
  value: "ContinuousCritic(\n  (features_extractor): NatureCNN(\n    (cnn): Sequential(\n\
    \      (0): Conv2d(3, 32, kernel_size=(8, 8), stride=(4, 4))\n      (1): ReLU()\n\
    \      (2): Conv2d(32, 64, kernel_size=(4, 4), stride=(2, 2))\n      (3): ReLU()\n\
    \      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1))\n      (5): ReLU()\n\
    \      (6): Flatten(start_dim=1, end_dim=-1)\n    )\n    (linear): Sequential(\n\
    \      (0): Linear(in_features=50176, out_features=512, bias=True)\n      (1):\
    \ ReLU()\n    )\n  )\n  (qf0): Sequential(\n    (0): Linear(in_features=517, out_features=256,\
    \ bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256,\
    \ bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1,\
    \ bias=True)\n  )\n  (qf1): Sequential(\n    (0): Linear(in_features=517, out_features=256,\
    \ bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=256, out_features=256,\
    \ bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=256, out_features=1,\
    \ bias=True)\n  )\n)"
batch_norm_stats:
  desc: null
  value: '[]'
batch_norm_stats_target:
  desc: null
  value: '[]'
_logger:
  desc: null
  value: <stable_baselines3.common.logger.Logger object at 0x781534569a80>
